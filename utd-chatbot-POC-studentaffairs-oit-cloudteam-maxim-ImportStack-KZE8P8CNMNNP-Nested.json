{
    "Resources": {
      "PostUpgradeImport": {
        "Type": "Custom::PostUpgradeImport",
        "DependsOn": ["ImportStepLambda"],
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "importbucket": {"Ref": "ImportBucket"},
          "exportbucket": {"Ref": "ExportBucket"},
          "id": "ExportAll_QnABot_v4.1.0.json",
          "index": {"Ref": "VarIndex"},
          "encryption": {"Ref": "Encryption"}
        }
      },
      "PostUpgradeImportMetrics": {
        "Type": "Custom::PostUpgradeImport",
        "DependsOn": ["ImportStepLambda"],
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "importbucket": {"Ref": "ImportBucket"},
          "exportbucket": {"Ref": "ExportBucket"},
          "id": "ExportAll_QnABot_v4.1.0_metrics.json",
          "index": {"Ref": "MetricsIndex"},
          "encryption": {"Ref": "Encryption"}
        }
      },
      "PostUpgradeImportFeedback": {
        "Type": "Custom::PostUpgradeImport",
        "DependsOn": ["ImportStepLambda"],
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "importbucket": {"Ref": "ImportBucket"},
          "exportbucket": {"Ref": "ExportBucket"},
          "id": "ExportAll_QnABot_v4.1.0_feedback.json",
          "index": {"Ref": "FeedbackIndex"},
          "encryption": {"Ref": "Encryption"}
        }
      },
      "ImportTriggerFromS3": {
        "Type": "Custom::S3Lambda",
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "Bucket": {"Ref": "ImportBucket"},
          "NotificationConfiguration": {
            "LambdaFunctionConfigurations": [
              {
                "LambdaFunctionArn": {"Fn::GetAtt": ["ImportStartLambda", "Arn"]},
                "Events": ["s3:ObjectCreated:*"],
                "Filter": {
                  "Key": {"FilterRules": [{"Name": "prefix", "Value": "data"}]}
                }
              },
              {
                "LambdaFunctionArn": {"Fn::GetAtt": ["ImportStepLambda", "Arn"]},
                "Events": ["s3:ObjectCreated:*"],
                "Filter": {
                  "Key": {"FilterRules": [{"Name": "prefix", "Value": "status"}]}
                }
              }
            ]
          }
        }
      },
      "ImportStartPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {"Fn::GetAtt": ["ImportStartLambda", "Arn"]},
          "Action": "lambda:InvokeFunction",
          "Principal": "s3.amazonaws.com",
          "SourceAccount": {"Ref": "AWS::AccountId"},
          "SourceArn": {"Fn::Sub": "arn:aws:s3:::${ImportBucket}"}
        }
      },
      "ImportStepPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {"Fn::GetAtt": ["ImportStepLambda", "Arn"]},
          "Action": "lambda:InvokeFunction",
          "Principal": "s3.amazonaws.com",
          "SourceAccount": {"Ref": "AWS::AccountId"},
          "SourceArn": {"Fn::Sub": "arn:aws:s3:::${ImportBucket}"}
        }
      },
      "ImportCodeVersion": {
        "Type": "Custom::S3Version",
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "Bucket": {"Ref": "BootstrapBucket"},
          "Key": {"Fn::Sub": "${BootstrapPrefix}/lambda/import.zip"},
          "BuildDate": "2020-07-20T00:24:38.464Z"
        }
      },
      "ImportStartLambda": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {"Ref": "BootstrapBucket"},
            "S3Key": {"Fn::Sub": "${BootstrapPrefix}/lambda/import.zip"},
            "S3ObjectVersion": {"Ref": "ImportCodeVersion"}
          },
          "Environment": {
            "Variables": {
              "STRIDE": "1000000",
              "ES_INDEX": {"Ref": "VarIndex"},
              "ES_METRICSINDEX": {"Ref": "MetricsIndex"},
              "ES_FEEDBACKINDEX": {"Ref": "FeedbackIndex"},
              "ES_ENDPOINT": {"Ref": "EsEndpoint"},
              "ES_PROXY": {"Ref": "EsProxyLambda"}
            }
          },
          "Handler": "index.start",
          "MemorySize": "1024",
          "Role": {"Fn::GetAtt": ["ImportRole", "Arn"]},
          "Runtime": "nodejs10.x",
          "Timeout": 300,
          "Tags": [{"Key": "Type", "Value": "Import"}]
        }
      },
      "ImportStepLambda": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {"Ref": "BootstrapBucket"},
            "S3Key": {"Fn::Sub": "${BootstrapPrefix}/lambda/import.zip"},
            "S3ObjectVersion": {"Ref": "ImportCodeVersion"}
          },
          "Environment": {
            "Variables": {
              "ES_INDEX": {"Ref": "VarIndex"},
              "ES_METRICSINDEX": {"Ref": "MetricsIndex"},
              "ES_FEEDBACKINDEX": {"Ref": "FeedbackIndex"},
              "ES_ENDPOINT": {"Ref": "EsEndpoint"},
              "ES_PROXY": {"Ref": "EsProxyLambda"}
            }
          },
          "Handler": "index.step",
          "MemorySize": "1024",
          "Role": {"Fn::GetAtt": ["ImportRole", "Arn"]},
          "Runtime": "nodejs10.x",
          "Timeout": 300,
          "Tags": [{"Key": "Type", "Value": "Import"}]
        }
      },
      "ImportRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {"Service": "lambda.amazonaws.com"},
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/",
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            {"Ref": "ImportPolicy"}
          ]
        }
      },
      "ImportPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": ["s3:*"],
                "Resource": [{"Fn::Sub": "arn:aws:s3:::${ImportBucket}*"}]
              },
              {
                "Effect": "Allow",
                "Action": ["lambda:InvokeFunction"],
                "Resource": [{"Ref": "EsProxyLambda"}]
              }
            ]
          }
        }
      },
      "ImportClear": {
        "Type": "Custom::S3Clear",
        "Properties": {
          "ServiceToken": {"Ref": "CFNLambda"},
          "Bucket": {"Ref": "ImportBucket"}
        }
      }
    },
    "Conditions": {},
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "QnABot nested import resources",
    "Outputs": {},
    "Parameters": {
      "CFNLambda": {"Type": "String"},
      "CFNInvokePolicy": {"Type": "String"},
      "BootstrapBucket": {"Type": "String"},
      "BootstrapPrefix": {"Type": "String"},
      "EsEndpoint": {"Type": "String"},
      "EsProxyLambda": {"Type": "String"},
      "ImportBucket": {"Type": "String"},
      "ExportBucket": {"Type": "String"},
      "VarIndex": {"Type": "String"},
      "MetricsIndex": {"Type": "String"},
      "FeedbackIndex": {"Type": "String"},
      "Encryption": {"Type": "String"}
    }
  }